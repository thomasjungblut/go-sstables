// Code generated by capnpc-go. DO NOT EDIT.

package test_files

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
)

type TextLineCapnProto capnp.Struct

// TextLineCapnProto_TypeID is the unique identifier for the type TextLineCapnProto.
const TextLineCapnProto_TypeID = 0xc5ef92ce21f07260

func NewTextLineCapnProto(s *capnp.Segment) (TextLineCapnProto, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return TextLineCapnProto(st), err
}

func NewRootTextLineCapnProto(s *capnp.Segment) (TextLineCapnProto, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return TextLineCapnProto(st), err
}

func ReadRootTextLineCapnProto(msg *capnp.Message) (TextLineCapnProto, error) {
	root, err := msg.Root()
	return TextLineCapnProto(root.Struct()), err
}

func (s TextLineCapnProto) String() string {
	str, _ := text.Marshal(0xc5ef92ce21f07260, capnp.Struct(s))
	return str
}

func (s TextLineCapnProto) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (TextLineCapnProto) DecodeFromPtr(p capnp.Ptr) TextLineCapnProto {
	return TextLineCapnProto(capnp.Struct{}.DecodeFromPtr(p))
}

func (s TextLineCapnProto) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s TextLineCapnProto) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s TextLineCapnProto) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s TextLineCapnProto) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s TextLineCapnProto) LineNumber() int32 {
	return int32(capnp.Struct(s).Uint32(0))
}

func (s TextLineCapnProto) SetLineNumber(v int32) {
	capnp.Struct(s).SetUint32(0, uint32(v))
}

func (s TextLineCapnProto) Line() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s TextLineCapnProto) HasLine() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s TextLineCapnProto) LineBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s TextLineCapnProto) SetLine(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// TextLineCapnProto_List is a list of TextLineCapnProto.
type TextLineCapnProto_List = capnp.StructList[TextLineCapnProto]

// NewTextLineCapnProto creates a new list of TextLineCapnProto.
func NewTextLineCapnProto_List(s *capnp.Segment, sz int32) (TextLineCapnProto_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[TextLineCapnProto](l), err
}

// TextLineCapnProto_Future is a wrapper for a TextLineCapnProto promised by a client call.
type TextLineCapnProto_Future struct{ *capnp.Future }

func (f TextLineCapnProto_Future) Struct() (TextLineCapnProto, error) {
	p, err := f.Future.Ptr()
	return TextLineCapnProto(p.Struct()), err
}

const schema_bf8381dfd6a0d017 = "x\xda\x12Hu`1\xe4\xdd\xcf\xc8\xc0\x14(\xc2\xca" +
	"\xf6?\xa1\xe8\x83\xe2\xb9I\xef\x8f2\x04\xaa02\xfe" +
	"\x17\xbf\xb0\xe0\xda\xfd\xc6\xe6\xfd\x0c\xac\x8c\xec\x0c\x0c\x86" +
	"G71\x0a\xdeeg`\x10\xbcY\xce\xa0\xfb\xbf(" +
	"59\xbf(%3\x9fU\xbf$\xb5\xb8$>-3" +
	"'\xb5X\xbf$\xb5\xa2$>'3/U/9\xb1" +
	" \xaf\xc0*$\xb5\xa2\xc4'3/\xd59\xb1 O" +
	">\xa0(\xbf$?\x80\x911\x90\x83\x99\x85\x81\x81\x85" +
	"\x91\x81AP3\x8a\x81!P\x83\x991\xd0\x84\x89\x91" +
	"\x91Q\x84\x11$f\xa8\xc5\xc0\x10\xa8\xc3\xcc\x18h\xc1" +
	"\xc4\xf8\x1fd\x96_in\x12\x03sj\x11#\x0b\x03" +
	"\x13#\x0b\x03#?H\x90\x91\x87\x81\x89\x91\x87\x81\x11" +
	"\x10\x00\x00\xff\xff\x10\xa33\xb6"

func RegisterSchema(reg *schemas.Registry) {
	reg.Register(&schemas.Schema{
		String: schema_bf8381dfd6a0d017,
		Nodes: []uint64{
			0xc5ef92ce21f07260,
		},
		Compressed: true,
	})
}
